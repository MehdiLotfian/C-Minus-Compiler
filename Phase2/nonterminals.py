class NonTerminals:
    Program = 'Program'
    Declaration_list = 'Declaration-list'
    Declaration = 'Declaration'
    Declaration_initial = 'Declaration-initial'
    Declaration_prime = 'Declaration-prime'
    Var_declaration_prime = 'Var-declaration-prime'
    Fun_declaration_prime = 'Fun-declaration-prime'
    Type_specifier = 'Type-specifier'
    Params = 'Params'
    Param_list = 'Param-list'
    Param = 'Param'
    Param_prime = 'Param-prime'
    Compound_stmt = 'Compound-stmt'
    Statement_list = 'Statement-list'
    Statement = 'Statement'
    Expression_stmt = 'Expression-stmt'
    Selection_stmt = 'Selection-stmt'
    Else_stmt = 'Else-stmt'
    Iteration_stmt = 'Iteration-stmt'
    Return_stmt = 'Return-stmt'
    Return_stmt_prime = 'Return-stmt-prime'
    Expression = 'Expression'
    B = 'B'
    H = 'H'
    Simple_expression_zegond = 'Simple-expression-zegond'
    Simple_expression_prime = 'Simple-expression-prime'
    C = 'C'
    Relop = 'Relop'
    Additive_expression = 'Additive-expression'
    Additive_expression_prime = 'Additive-expression-prime'
    Additive_expression_zegond = 'Additive-expression-zegond'
    D = 'D'
    Addop = 'Addop'
    Term = 'Term'
    Term_prime = 'Term-prime'
    Term_zegond = 'Term-zegond'
    G = 'G'
    Signed_factor = 'Signed-factor'
    Signed_factor_prime = 'Signed-factor-prime'
    Signed_factor_zegond = 'Signed-factor-zegond'
    Factor = 'Factor'
    Var_call_prime = 'Var-call-prime'
    Var_prime = 'Var-prime'
    Factor_prime = 'Factor-prime'
    Factor_zegond = 'Factor-zegond'
    Args = 'Args'
    Arg_list = 'Arg-list'
    Arg_list_prime = 'Arg-list-prime'
